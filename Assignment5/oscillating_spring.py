import numpy as np

#a)

#constants given
k = 4.0
gamma = 0.15
m = 9.0
A = 0.3

def yt(t):
    funk = A*np.exp(-gamma*t)* np.cos(np.sqrt(k/m)*t) #position formula
    return funk


n = 101
dx = (25)/(n-1)

t_array = np.zeros(n)
y_array = np.zeros(n)

for i in range(n): #loop to fill numpy arrays
    t_array[i] = dx*i
    y_array[i] = yt(dx*i)

print(t_array)
print(y_array)
"""

Run example:
user$   python3 oscillating_spring.py

output:
[ 0.    0.25  0.5   0.75  1.    1.25  1.5   1.75  2.    2.25  2.5   2.75
  3.    3.25  3.5   3.75  4.    4.25  4.5   4.75  5.    5.25  5.5   5.75
  6.    6.25  6.5   6.75  7.    7.25  7.5   7.75  8.    8.25  8.5   8.75
  9.    9.25  9.5   9.75 10.   10.25 10.5  10.75 11.   11.25 11.5  11.75
 12.   12.25 12.5  12.75 13.   13.25 13.5  13.75 14.   14.25 14.5  14.75
 15.   15.25 15.5  15.75 16.   16.25 16.5  16.75 17.   17.25 17.5  17.75
 18.   18.25 18.5  18.75 19.   19.25 19.5  19.75 20.   20.25 20.5  20.75
 21.   21.25 21.5  21.75 22.   22.25 22.5  22.75 23.   23.25 23.5  23.75
 24.   24.25 24.5  24.75 25.  ]
[ 3.00000000e-01  2.84954297e-01  2.63003296e-01  2.35261635e-01
  2.02925830e-01  1.67234799e-01  1.29432046e-01  9.07304561e-02
  5.22804841e-02  1.51424010e-02 -1.97369305e-02 -5.15424182e-02
 -7.96040815e-02 -1.03405358e-01 -1.22586505e-01 -1.36943362e-01
 -1.46421831e-01 -1.51108553e-01 -1.51218311e-01 -1.47078740e-01
 -1.39112990e-01 -1.27820951e-01 -1.13759692e-01 -9.75236984e-02
 -7.97254994e-02 -6.09771814e-02 -4.18732529e-02 -2.29752393e-02
 -4.79831682e-03  1.21997887e-02  2.76274885e-02  4.11655359e-02
  5.25707531e-02  6.16773553e-02  6.83960090e-02  7.27108129e-02
  7.46744386e-02  7.44016978e-02  7.20618325e-02  6.78698348e-02
  6.20771112e-02  5.49618000e-02  4.68190382e-02  3.79514554e-02
  2.86601441e-02  1.92363259e-02  9.95389610e-03  1.06299368e-03
 -7.21529815e-03 -1.46930535e-02 -2.12183790e-02 -2.66770705e-02
 -3.09930928e-02 -3.41279546e-02 -3.60790755e-02 -3.68772629e-02
 -3.65834362e-02 -3.52847417e-02 -3.30902138e-02 -3.01261347e-02
 -2.65312466e-02 -2.24519594e-02 -1.80376909e-02 -1.34364577e-02
 -8.79082545e-03 -4.23430379e-03  1.11743993e-04  4.14062730e-03
  7.76226051e-03  1.09044899e-02  1.35138217e-02  1.55555742e-02
  1.70134914e-02  1.78888672e-02  1.81992412e-02  1.79767333e-02
  1.72660884e-02  1.61225100e-02  1.46093556e-02  1.27957707e-02
  1.07543311e-02  8.55875943e-03  6.28177455e-03  3.99312435e-03
  1.75784419e-03 -3.65226749e-04 -2.32464804e-03 -4.07728624e-03
 -5.58892448e-03 -6.83457787e-03 -7.79852726e-03 -8.47409058e-03
 -8.86315726e-03 -8.97551596e-03 -8.82800917e-03 -8.44355116e-03
 -7.85004655e-03 -7.07924703e-03 -6.16558284e-03 -5.14500350e-03
 -4.05385970e-03]
"""

#b)

ta = np.linspace(0,25,101) #time array
ya = yt(ta) #calculating the position array given the time array

print(ta)
print(ya)

"""
Run example:
user$ python3 oscillating_spring.py

output:

[ 0.    0.25  0.5   0.75  1.    1.25  1.5   1.75  2.    2.25  2.5   2.75
  3.    3.25  3.5   3.75  4.    4.25  4.5   4.75  5.    5.25  5.5   5.75
  6.    6.25  6.5   6.75  7.    7.25  7.5   7.75  8.    8.25  8.5   8.75
  9.    9.25  9.5   9.75 10.   10.25 10.5  10.75 11.   11.25 11.5  11.75
 12.   12.25 12.5  12.75 13.   13.25 13.5  13.75 14.   14.25 14.5  14.75
 15.   15.25 15.5  15.75 16.   16.25 16.5  16.75 17.   17.25 17.5  17.75
 18.   18.25 18.5  18.75 19.   19.25 19.5  19.75 20.   20.25 20.5  20.75
 21.   21.25 21.5  21.75 22.   22.25 22.5  22.75 23.   23.25 23.5  23.75
 24.   24.25 24.5  24.75 25.  ]
[ 3.00000000e-01  2.84954297e-01  2.63003296e-01  2.35261635e-01
  2.02925830e-01  1.67234799e-01  1.29432046e-01  9.07304561e-02
  5.22804841e-02  1.51424010e-02 -1.97369305e-02 -5.15424182e-02
 -7.96040815e-02 -1.03405358e-01 -1.22586505e-01 -1.36943362e-01
 -1.46421831e-01 -1.51108553e-01 -1.51218311e-01 -1.47078740e-01
 -1.39112990e-01 -1.27820951e-01 -1.13759692e-01 -9.75236984e-02
 -7.97254994e-02 -6.09771814e-02 -4.18732529e-02 -2.29752393e-02
 -4.79831682e-03  1.21997887e-02  2.76274885e-02  4.11655359e-02
  5.25707531e-02  6.16773553e-02  6.83960090e-02  7.27108129e-02
  7.46744386e-02  7.44016978e-02  7.20618325e-02  6.78698348e-02
  6.20771112e-02  5.49618000e-02  4.68190382e-02  3.79514554e-02
  2.86601441e-02  1.92363259e-02  9.95389610e-03  1.06299368e-03
 -7.21529815e-03 -1.46930535e-02 -2.12183790e-02 -2.66770705e-02
 -3.09930928e-02 -3.41279546e-02 -3.60790755e-02 -3.68772629e-02
 -3.65834362e-02 -3.52847417e-02 -3.30902138e-02 -3.01261347e-02
 -2.65312466e-02 -2.24519594e-02 -1.80376909e-02 -1.34364577e-02
 -8.79082545e-03 -4.23430379e-03  1.11743993e-04  4.14062730e-03
  7.76226051e-03  1.09044899e-02  1.35138217e-02  1.55555742e-02
  1.70134914e-02  1.78888672e-02  1.81992412e-02  1.79767333e-02
  1.72660884e-02  1.61225100e-02  1.46093556e-02  1.27957707e-02
  1.07543311e-02  8.55875943e-03  6.28177455e-03  3.99312435e-03
  1.75784419e-03 -3.65226749e-04 -2.32464804e-03 -4.07728624e-03
 -5.58892448e-03 -6.83457787e-03 -7.79852726e-03 -8.47409058e-03
 -8.86315726e-03 -8.97551596e-03 -8.82800917e-03 -8.44355116e-03
 -7.85004655e-03 -7.07924703e-03 -6.16558284e-03 -5.14500350e-03
 -4.05385970e-03]
"""
#c)

import matplotlib.pyplot as plt

plt.plot(ta,ya, label = "vectorized",color='orange')
plt.plot(t_array,y_array, label = "non vectorized",linestyle='dashed')
plt.legend()
plt.grid()
plt.xlabel('tid (s)')
plt.ylabel('posisjon (m)')
#plt.savefig("plot.png")

plt.show()
